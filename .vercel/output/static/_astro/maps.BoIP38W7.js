import{s as c}from"./env.DH0pXKwG.js";async function w(){if(typeof window>"u")throw new Error("Google Maps can only be initialized on client side");if(!(window.google&&window.google.maps))throw new Error("Google Maps API key not configured for client-side use")}const a={center:c.business.coordinates,radius:c.serviceArea.radiusMiles,primaryAreas:c.serviceArea.primaryAreas};function f(e,r={}){const{showRadius:t=!0,showMarkers:o=!0,interactive:n=!0}=r,i={center:a.center,zoom:11,mapTypeId:google.maps.MapTypeId.ROADMAP,disableDefaultUI:!n,gestureHandling:n?"cooperative":"none",styles:[{featureType:"all",elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]}]},s=new google.maps.Map(e,i),l=new google.maps.Marker({position:a.center,map:s,title:c.business.name,icon:{url:"data:image/svg+xml;base64,"+btoa(`
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="18" fill="#D2A63C" stroke="#1D1912" stroke-width="2"/>
          <circle cx="20" cy="20" r="6" fill="#1D1912"/>
        </svg>
      `),scaledSize:new google.maps.Size(40,40),anchor:new google.maps.Point(20,20)}}),g=new google.maps.InfoWindow({content:`
      <div style="padding: 10px; max-width: 200px;">
        <h3 style="margin: 0 0 5px 0; color: #1D1912;">${c.business.name}</h3>
        <p style="margin: 0 0 5px 0; color: #BB8525;">Licensed Garage Door Service</p>
        <p style="margin: 0; color: #D2A63C; font-weight: bold;">${c.business.phone}</p>
      </div>
    `});return l.addListener("click",()=>{g.open(s,l)}),t&&new google.maps.Circle({strokeColor:"#D2A63C",strokeOpacity:.8,strokeWeight:2,fillColor:"#D2A63C",fillOpacity:.15,map:s,center:a.center,radius:a.radius*1609.34}),o&&p(s),s}async function p(e){new google.maps.Geocoder;const r=new google.maps.LatLngBounds;for(const t of a.primaryAreas)try{const o=await d(`${t}, NJ`);if(o){const n=new google.maps.Marker({position:o,map:e,title:`${t}, NJ - We serve this area!`,icon:{url:"data:image/svg+xml;base64,"+btoa(`
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="12" cy="12" r="10" fill="#EECD5C" stroke="#1D1912" stroke-width="1"/>
                <circle cx="12" cy="12" r="3" fill="#1D1912"/>
              </svg>
            `),scaledSize:new google.maps.Size(24,24),anchor:new google.maps.Point(12,12)}});r.extend(o),n.addListener("click",()=>{new google.maps.InfoWindow({content:`
              <div style="padding: 8px;">
                <h4 style="margin: 0 0 5px 0; color: #1D1912;">${t}, NJ</h4>
                <p style="margin: 0; color: #BB8525; font-size: 12px;">We provide garage door service in this area</p>
              </div>
            `}).open(e,n)})}}catch(o){console.warn(`Failed to geocode ${t}:`,o)}}function d(e){return new Promise(r=>{new google.maps.Geocoder().geocode({address:e},(o,n)=>{n===google.maps.GeocoderStatus.OK&&o&&o[0]?r(o[0].geometry.location):r(null)})})}function u(e,r={}){const t={types:["address"],componentRestrictions:{country:"US"}};if(r.restrictToServiceArea){const n=new google.maps.LatLngBounds,i=new google.maps.LatLng(a.center.lat,a.center.lng),s=a.radius/69;n.extend(new google.maps.LatLng(i.lat()-s,i.lng()-s)),n.extend(new google.maps.LatLng(i.lat()+s,i.lng()+s)),t.bounds=n,t.strictBounds=!0}const o=new google.maps.places.Autocomplete(e,t);return r.onPlaceSelected&&o.addListener("place_changed",()=>{const n=o.getPlace();r.onPlaceSelected(n)}),o}function y(e){const r=e instanceof google.maps.LatLng?e:new google.maps.LatLng(e.lat,e.lng),t=new google.maps.LatLng(a.center.lat,a.center.lng),o=google.maps.geometry.spherical.computeDistanceBetween(t,r),n=a.radius*1609.34;return o<=n}async function h(){const e=await fetch("/api/service-areas?type=service-areas");if(!e.ok)throw new Error("Failed to fetch service area data");return e.json()}async function v(e={}){const r=new URLSearchParams({type:"static",width:(e.width||600).toString(),height:(e.height||400).toString(),zoom:(e.zoom||11).toString()}),t=await fetch(`/api/service-areas?${r.toString()}`);if(!t.ok)throw new Error("Failed to fetch static map URL");return(await t.json()).url}export{f as createServiceAreaMap,h as fetchServiceAreaMapData,v as fetchStaticMapUrl,w as initializeGoogleMaps,y as isAddressInServiceArea,a as serviceAreaConfig,u as setupAddressAutocomplete};
