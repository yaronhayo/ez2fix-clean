---
// ResponsiveImage.astro - Optimized image component with WebP support and responsive sizing
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  sizes?: string;
}

const {
  src,
  alt,
  width,
  height,
  class: className = '',
  loading = 'lazy',
  priority = false,
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw'
} = Astro.props;

// Generate WebP and fallback URLs
// For external URLs (Vercel storage), we'll optimize by adding query parameters
const isExternal = src.startsWith('http');
const baseUrl = src;

// Generate responsive sizes for different breakpoints - optimized for actual display sizes
const responsiveSizes = [
  { width: 344, quality: 70 }, // Matches displayed dimensions
  { width: 400, quality: 75 },
  { width: 600, quality: 80 },
  { width: 800, quality: 85 }
];

// Create srcset for responsive images with quality optimization
const createSrcSet = (baseUrl: string, format?: string) => {
  if (!isExternal || !src.includes('vercel-storage.com')) {
    return baseUrl;
  }
  
  return responsiveSizes
    .map(({ width, quality }) => {
      const params = new URLSearchParams();
      params.set('w', width.toString());
      params.set('q', quality.toString());
      if (format) params.set('fm', format);
      return `${baseUrl}?${params.toString()} ${width}w`;
    })
    .join(', ');
};

// Create optimized URLs for different formats
const avifSrcSet = createSrcSet(baseUrl, 'avif');
const webpSrcSet = createSrcSet(baseUrl, 'webp');
const jpegSrcSet = createSrcSet(baseUrl, 'jpg');

// Single optimized fallback URL - sized for typical display
const optimizedUrl = isExternal && src.includes('vercel-storage.com')
  ? `${baseUrl}?w=400&q=75&fm=avif`
  : baseUrl;
---

<picture class={className}>
  <!-- AVIF format for maximum compression (Chrome 85+, Firefox 93+) -->
  {isExternal && src.includes('vercel-storage.com') && (
    <source
      srcset={avifSrcSet}
      sizes={sizes}
      type="image/avif"
    />
  )}
  
  <!-- WebP format for modern browsers -->
  {isExternal && src.includes('vercel-storage.com') && (
    <source
      srcset={webpSrcSet}
      sizes={sizes}
      type="image/webp"
    />
  )}
  
  <!-- JPEG fallback for older browsers -->
  <img
    src={optimizedUrl}
    srcset={isExternal && src.includes('vercel-storage.com') ? jpegSrcSet : undefined}
    sizes={isExternal && src.includes('vercel-storage.com') ? sizes : undefined}
    alt={alt}
    width={width}
    height={height}
    loading={priority ? 'eager' : loading}
    decoding="async"
    class={`${className} ${priority ? '' : 'transition-opacity duration-300'}`}
    style={priority ? 'content-visibility: auto;' : undefined}
  />
</picture>

<style>
  picture img {
    display: block;
    width: 100%;
    height: auto;
  }
  
  picture img.object-contain {
    object-fit: contain;
    object-position: center;
    width: auto !important;
    max-width: 100%;
  }
  
  /* Optimize image rendering */
  picture img[loading="lazy"] {
    opacity: 0;
    animation: fadeIn 0.3s ease-in-out forwards;
  }
  
  @keyframes fadeIn {
    to { opacity: 1; }
  }
  
  /* Content visibility for better performance */
  picture {
    content-visibility: auto;
    contain-intrinsic-size: 344px 200px;
  }
</style>