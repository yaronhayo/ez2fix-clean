---
// Admin page to view and test redirects (for development/debugging)
import { getAllRedirects } from '@/config/redirects';

export const prerender = false;

const allRedirects = getAllRedirects();
const exactRedirects = allRedirects.filter(r => r.type === 'exact');
const patternRedirects = allRedirects.filter(r => r.type === 'pattern');
const catchallRedirects = allRedirects.filter(r => r.type === 'catchall');
---

<!DOCTYPE html>
<html>
<head>
  <title>Redirect Management - Ez2Fix</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="robots" content="noindex">
  <style>
    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; line-height: 1.6; }
    .container { max-width: 1200px; margin: 0 auto; }
    .redirect-section { margin-bottom: 40px; }
    .redirect-table { width: 100%; border-collapse: collapse; margin-top: 20px; }
    .redirect-table th, .redirect-table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
    .redirect-table th { background-color: #f5f5f5; font-weight: 600; }
    .redirect-table tr:hover { background-color: #f9f9f9; }
    .badge { padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: 500; }
    .badge-exact { background-color: #e1f5fe; color: #0277bd; }
    .badge-pattern { background-color: #f3e5f5; color: #7b1fa2; }
    .badge-catchall { background-color: #fff3e0; color: #ef6c00; }
    .test-form { background: #f5f5f5; padding: 20px; border-radius: 8px; margin-top: 20px; }
    .test-input { width: 300px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; }
    .test-button { padding: 8px 16px; background: #1976d2; color: white; border: none; border-radius: 4px; cursor: pointer; }
    .test-result { margin-top: 15px; padding: 10px; border-radius: 4px; }
    .test-success { background: #e8f5e8; color: #2e7d32; }
    .test-error { background: #ffebee; color: #c62828; }
    h1 { color: #1D1912; }
    h2 { color: #D2A63C; border-bottom: 2px solid #EECD5C; padding-bottom: 5px; }
    .stats { display: flex; gap: 20px; margin-bottom: 30px; }
    .stat { padding: 15px; background: #f8f9fa; border-radius: 8px; text-align: center; }
    .stat-number { font-size: 24px; font-weight: bold; color: #D2A63C; }
    .stat-label { font-size: 14px; color: #666; }
  </style>
</head>
<body>
  <div class="container">
    <h1>üîÑ Redirect Management</h1>
    <p>This page shows all configured redirects for the Ez2Fix website. Use this for testing and debugging redirects during development.</p>
    
    <!-- Stats -->
    <div class="stats">
      <div class="stat">
        <div class="stat-number">{exactRedirects.length}</div>
        <div class="stat-label">Exact Redirects</div>
      </div>
      <div class="stat">
        <div class="stat-number">{patternRedirects.length}</div>
        <div class="stat-label">Pattern Redirects</div>
      </div>
      <div class="stat">
        <div class="stat-number">{catchallRedirects.length}</div>
        <div class="stat-label">Catchall Redirects</div>
      </div>
      <div class="stat">
        <div class="stat-number">{allRedirects.length}</div>
        <div class="stat-label">Total Redirects</div>
      </div>
    </div>
    
    <!-- Test Form -->
    <div class="test-form">
      <h3>üß™ Test Redirect</h3>
      <p>Enter a path to test if it would be redirected:</p>
      <input type="text" id="testPath" class="test-input" placeholder="/old-page" />
      <button onclick="testRedirect()" class="test-button">Test Redirect</button>
      <div id="testResult"></div>
    </div>
    
    <!-- Exact Redirects -->
    <div class="redirect-section">
      <h2>üìç Exact Redirects ({exactRedirects.length})</h2>
      <p>These redirects match exact paths and are handled by Astro's built-in redirect system.</p>
      <table class="redirect-table">
        <thead>
          <tr>
            <th>From</th>
            <th>To</th>
            <th>Type</th>
            <th>Description</th>
            <th>Test</th>
          </tr>
        </thead>
        <tbody>
          {exactRedirects.map(redirect => (
            <tr>
              <td><code>{redirect.from}</code></td>
              <td><code>{redirect.to}</code></td>
              <td><span class="badge badge-exact">{redirect.type}</span></td>
              <td>{redirect.description || 'No description'}</td>
              <td><a href={redirect.from} target="_blank">Test ‚Üí</a></td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    
    <!-- Pattern Redirects -->
    <div class="redirect-section">
      <h2>üéØ Pattern Redirects ({patternRedirects.length})</h2>
      <p>These redirects use patterns (wildcards) to match multiple URLs.</p>
      <table class="redirect-table">
        <thead>
          <tr>
            <th>Pattern</th>
            <th>To</th>
            <th>Type</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          {patternRedirects.map(redirect => (
            <tr>
              <td><code>{redirect.from}</code></td>
              <td><code>{redirect.to}</code></td>
              <td><span class="badge badge-pattern">{redirect.type}</span></td>
              <td>{redirect.description || 'No description'}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    
    <!-- Catchall Redirects -->
    <div class="redirect-section">
      <h2>üï∏Ô∏è Catchall Redirects ({catchallRedirects.length})</h2>
      <p>These redirects catch entire directories or path prefixes.</p>
      <table class="redirect-table">
        <thead>
          <tr>
            <th>Pattern</th>
            <th>To</th>
            <th>Type</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          {catchallRedirects.map(redirect => (
            <tr>
              <td><code>{redirect.from}</code></td>
              <td><code>{redirect.to}</code></td>
              <td><span class="badge badge-catchall">{redirect.type}</span></td>
              <td>{redirect.description || 'No description'}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
    
    <div style="margin-top: 50px; padding: 20px; background: #f0f0f0; border-radius: 8px;">
      <h3>üìù How to Add New Redirects</h3>
      <ol>
        <li><strong>Simple redirects:</strong> Add to <code>astro.config.mjs</code> redirects object</li>
        <li><strong>Complex patterns:</strong> Add to <code>src/config/redirects.ts</code></li>
        <li><strong>Test redirects:</strong> Use the test form above or visit the old URLs directly</li>
        <li><strong>Deploy:</strong> Redirects are applied automatically on deployment</li>
      </ol>
    </div>
  </div>
  
  <script>
    async function testRedirect() {
      const path = document.getElementById('testPath').value;
      const resultDiv = document.getElementById('testResult');
      
      if (!path) {
        resultDiv.innerHTML = '<div class="test-result test-error">Please enter a path to test.</div>';
        return;
      }
      
      try {
        const response = await fetch(`/api/redirect?path=${encodeURIComponent(path)}`);
        
        if (response.redirected || response.status === 301 || response.status === 302) {
          resultDiv.innerHTML = `<div class="test-result test-success">‚úÖ <code>${path}</code> redirects to <code>${response.url}</code></div>`;
        } else {
          const data = await response.json();
          resultDiv.innerHTML = `<div class="test-result test-error">‚ùå No redirect found for <code>${path}</code></div>`;
        }
      } catch (error) {
        resultDiv.innerHTML = `<div class="test-result test-error">Error testing redirect: ${error.message}</div>`;
      }
    }
    
    // Allow Enter key to trigger test
    document.getElementById('testPath').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        testRedirect();
      }
    });
  </script>
</body>
</html>